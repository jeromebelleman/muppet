#! /usr/bin/env python

'''
Manage configurations
'''

import sys
import os
from os.path import expanduser, exists, islink
from argparse import ArgumentParser, ArgumentDefaultsHelpFormatter
import stat, pwd, grp

import logging
import pprint

from mako.template import Template

import functions

def applyconf(args):
    '''
    Apply configuration
    '''
            
    functions.__globals__['_cfg'] = {'dryrun':    args.dryrun,
                                     'verbose':   args.verbose,
                                     'directory': args.directory,
                                    }

    execfile(expanduser(args.directory) + '/index.py', functions.__globals__)

def main():
    '''
    Entry function
    '''

    parser = ArgumentParser(description="manage configurations")
    subs = parser.add_subparsers()
    papply = subs.add_parser('apply', help="apply configuration",
                             formatter_class=ArgumentDefaultsHelpFormatter)
    papply.add_argument('-d', '--directory', help="configuration directory",
                        default='~/.muppet')
    papply.add_argument('--dryrun', '-n', action='store_true',
                        help="don't perform any change")
    papply.add_argument('--verbose', '-v', action='store_true',
                        help="be more verbose")
    papply.set_defaults(func=applyconf)
    args = parser.parse_args()

    level = logging.DEBUG if args.verbose else logging.INFO
    logging.basicConfig(level=level, format="%(message)s")

    try:
        args.func(args)
    except IOError, e:
        logging.error(e)

if __name__ == '__main__':
    sys.exit(main())
